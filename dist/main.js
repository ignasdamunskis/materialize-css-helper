(()=>{"use strict";function e(e=!1){let t=!1;try{const e=Object.defineProperty({},"passive",{get:function(){t=!0}});window.addEventListener("testPassive",null,e),window.removeEventListener("testPassive",null,e)}catch(e){}if(e){const e=`[Passive Events Support] "passive" option is ${t?"":"not "}supported by your browser.`;t?console.info(e):console.warn(e)}return t}function t(e){return["scroll","wheel","touchstart","touchmove","touchenter","touchend","touchleave","mouseout","mouseleave","mouseup","mousedown","mousemove","mouseenter","mousewheel","mouseover"].includes(e)}document.addEventListener("DOMContentLoaded",(()=>{!function(n){const o={debug:!1,nonPassiveListeners:!0,selectOptions:!0,selectTriggers:!0,autocompletedInputLabels:!0,...n};var s;o.nonPassiveListeners&&function(n){const o=["touchstart","touchmove","touchend"];(function(n){const o={debug:!1,events:[],listeners:[],...n};o.debug&&(console.info("[Passive Events Support] Initialized With",o),o.events=o.events.filter((e=>{const n=t(e);return n||console.warn(`[Passive Events Support] Unsupported Event: ${e}`),n})),o.listeners=o.listeners.filter((e=>{const n=t(e.event);return n||console.warn("[Passive Events Support] Unsupported Listener:",e),n})));const{debug:s,events:i,listeners:r}=o,l=EventTarget.prototype.addEventListener;EventTarget.prototype.addEventListener=function(...t){const n=t[2],o=i.includes(t[0]),c=r.find((({element:e,event:n})=>"function"==typeof this.matches&&this.matches(e)&&n===t[0])),u=!t[2]||void 0===t[2].passive;if((o||c)&&u){const o=t[1].toString(),[i,...r]=o.split("{"),l=i.replace(/(function|=>)/,"").trim(),u=r.join("{"),a=(l.match(/\(([^)]+)\)/)||[`(${l})`])[0].replace(/[()]/g,""),d=u.includes("preventDefault")||c&&c.prevented;t[2]={...t[2]||{},...e()&&{passive:!d}},s&&console.info("[Passive Events Support] Updated Event Listeners",{element:this,event:t[0],handler:{fn:t[1],fnArgument:a,fnContent:u,fnPrevented:d},oldArguments:n,updatedArguments:t[2]})}l.call(this,...t)}})({events:o}),n&&console.info("[Materialize Helper] Fixed non-passive event listeners",{events:o})}(o.debug),o.selectOptions&&(s=o.debug,setTimeout((()=>{let t=!1;const n=!!e()&&{passive:!0},o=document.querySelectorAll(".select-wrapper ul.select-dropdown li");o.length&&s&&console.info("[Materialize Helper] Fixed select options",{options:o});for(const e of o)e.addEventListener("touchmove",(()=>{t=!0}),n),e.addEventListener("touchstart",(()=>{t=!1}),n),e.addEventListener("touchend",(e=>{t||e.stopPropagation()}),n)}),0)),o.selectTriggers&&function(e){setTimeout((()=>{const t=document.querySelectorAll("input.select-dropdown.dropdown-trigger");for(const e of t){const t=e.closest(".select-wrapper").querySelector("select"),n=t.options[t.selectedIndex];e.placeholder=n.text}t.length&&e&&console.info("[Materialize Helper] Fixed select triggers",{triggers:t})}),0)}(o.debug),o.autocompletedInputLabels&&function(e){document.addEventListener("onautocomplete",(function(t){const n=t.target,o=n.parentNode.querySelector(`label[for="${n.id}"]`);n.hasAttribute("autocompleted")&&o&&(o.classList.add("active"),n.classList.add("valid"),e&&console.info("[Materialize Helper] Fixed autocompleted input label",{input:n,label:o}))}))}(o.debug)}(window.materializeHelper||{})}))})();